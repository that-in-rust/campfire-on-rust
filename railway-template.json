{
  "name": "Campfire v0.1 - Rust Chat Application",
  "description": "Zero-friction deployment of Campfire chat application built in Rust. Features real-time messaging, @mentions, sound system, search, and push notifications.",
  "icon": "🔥",
  "tags": ["chat", "rust", "websocket", "real-time", "messaging"],
  "repository": "https://github.com/that-in-rust/campfire-on-rust",
  "services": [
    {
      "name": "campfire-app",
      "serviceName": "campfire",
      "source": {
        "type": "image",
        "image": "campfire-rust:latest"
      },
      "variables": {
        "CAMPFIRE_HOST": "0.0.0.0",
        "CAMPFIRE_PORT": "3000",
        "CAMPFIRE_DATABASE_URL": "sqlite:///app/data/campfire.db",
        "CAMPFIRE_LOG_LEVEL": "info",
        "RUST_LOG": "campfire_on_rust=info,tower_http=debug",
        "RUST_BACKTRACE": "1",
        "CAMPFIRE_SESSION_TIMEOUT_HOURS": "24",
        "CAMPFIRE_MAX_MESSAGE_LENGTH": "10000",
        "CAMPFIRE_ENABLE_USER_REGISTRATION": "true",
        "CAMPFIRE_MAX_CONNECTIONS": "100",
        "CAMPFIRE_CONNECTION_TIMEOUT_SECONDS": "30"
      },
      "domains": [
        {
          "name": "${{RAILWAY_STATIC_URL}}"
        }
      ],
      "healthcheckPath": "/health",
      "healthcheckTimeout": 30,
      "restartPolicyType": "ON_FAILURE",
      "restartPolicyMaxRetries": 3,
      "volumes": [
        {
          "name": "campfire-data",
          "mountPath": "/app/data"
        }
      ]
    }
  ],
  "volumes": [
    {
      "name": "campfire-data"
    }
  ],
  "instructions": {
    "start": "🔥 **Campfire v0.1 Deployment**\n\nYour Rust-powered chat application is being deployed!\n\n**What's being set up:**\n- Real-time chat with WebSocket support\n- SQLite database with persistent storage\n- Full-text search capabilities\n- Push notification support\n- Bot API for integrations\n- Automatic HTTPS with Railway domain\n\n**Next steps:**\n1. Wait for deployment to complete (~2-3 minutes)\n2. Click the generated URL to access Campfire\n3. Create your admin account (first-run setup)\n4. Start chatting with your team!\n\n**Optional configuration:**\n- Set `CAMPFIRE_VAPID_PUBLIC_KEY` and `CAMPFIRE_VAPID_PRIVATE_KEY` for push notifications\n- Set `CAMPFIRE_SSL_DOMAIN` for custom domain with automatic HTTPS\n- Enable demo mode with `CAMPFIRE_DEMO_MODE=true` for testing",
    
    "end": "🎉 **Campfire Deployment Complete!**\n\n**Your chat application is ready:**\n- **URL**: Click the domain link above to access Campfire\n- **Admin Setup**: Create your admin account on first visit\n- **Database**: Persistent SQLite storage in Railway volume\n- **Performance**: Optimized Rust binary with <1s startup time\n\n**Features available:**\n✅ Real-time messaging with typing indicators\n✅ @mentions and user notifications\n✅ /play sound commands (59 embedded sounds)\n✅ Full-text search across all messages\n✅ Room management (Open, Closed, Direct)\n✅ Bot API for integrations\n✅ Push notifications (configure VAPID keys)\n✅ Mobile-responsive web interface\n\n**Configuration:**\n- **Environment Variables**: Configure in Railway dashboard\n- **Custom Domain**: Set CAMPFIRE_SSL_DOMAIN for automatic HTTPS\n- **Push Notifications**: Generate VAPID keys at https://vapidkeys.com/\n- **Scaling**: Railway auto-scales based on usage\n\n**Support:**\n- 📖 Documentation: GitHub repository README\n- 🐛 Issues: GitHub Issues for bug reports\n- 💬 Community: GitHub Discussions\n\n**Performance:**\n- Memory: ~20MB base + ~1MB per connection\n- Startup: <1 second cold start\n- Throughput: 1000+ messages/second\n- Users: 100+ concurrent users per instance\n\nEnjoy your new Rust-powered chat application! 🚀"
  },
  "metadata": {
    "version": "0.1.0",
    "author": "Campfire Team",
    "license": "MIT",
    "homepage": "https://github.com/that-in-rust/campfire-on-rust",
    "documentation": "https://github.com/that-in-rust/campfire-on-rust#readme",
    "categories": ["communication", "collaboration", "real-time"],
    "keywords": ["chat", "messaging", "rust", "websocket", "real-time", "team-communication"],
    "requirements": {
      "memory": "64MB minimum, 128MB recommended",
      "storage": "100MB for application + database growth",
      "network": "HTTP/HTTPS and WebSocket support"
    },
    "features": [
      "Real-time messaging with WebSocket",
      "Rich text with @mentions and formatting", 
      "Sound system with 59 embedded MP3 files",
      "Full-text search with SQLite FTS5",
      "Push notifications with Web Push API",
      "Bot API for integrations",
      "Session management and authentication",
      "Room management (Open/Closed/Direct)",
      "First-run admin setup",
      "Demo mode for evaluation",
      "Single binary deployment",
      "Automatic database migrations",
      "Mobile-responsive interface",
      "Rate limiting and security headers",
      "Health checks and monitoring"
    ]
  }
}